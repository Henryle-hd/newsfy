generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  temporaryPassword String?
  temporaryPasswordExpires DateTime?
  verificationTokens VerificationToken[]
  Article      Article[]

}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  token      String
  expires    DateTime
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([userId, token])
}

model Subscriber{
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email   String @unique
  createdAt  DateTime @default(now())
  updatedAt   DateTime   @updatedAt
  commentForNew CommentForNew[]
}

model Article {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  image       String
  day         String
  month       String
  status      String?
  isPublic    Boolean @default(false)
  createdByBot Boolean
  ArticleSource String?
  userid      String?   @db.ObjectId
  user        User?     @relation(fields: [userid], references: [id], onDelete: Cascade)
  category    String
  comment     CommentForNew[]
  views       Int      @default(0)
  likes       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


enum CategoryType {
  KIMATAIFA
  AFYA
  TEHAMA
  AJIRA
  BURUDANI
  MICHEZO
}

// User need to be subscriber to comment
model CommentForNew {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  content     String
  subscriberId      String     @db.ObjectId
  subscriber       Subscriber       @relation(fields: [subscriberId], references: [id], onDelete: Cascade)
  ArticleId   String    @db.ObjectId
  Article     Article   @relation(fields: [ArticleId], references: [id], onDelete: Cascade)

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model NotificationDelivery{
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  content String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

}
